---
title: "RKNGH analysis"
format: html
editor: 
  markdown: 
    wrap: 72
---

This is for analysis of the results in the RKNGH-hyperspectral feature
importance study.

# Setup

```{r, warning = FALSE, message = FALSE}
# Will be used for easier navigation within the directory structure
here::i_am("r/analysis.qmd")

library(here)
library(rlang)
library(readr)
library(tidyverse)
library(ggthemes)

options(scipen = 9)
knitr::opts_chunk$set(cache = TRUE)
```

Some rows have a `NA` for `Method` and `Waveband`. These represent the
baseline models, where no waveband selection methods were applied.

```{r}
results <- read_csv(here("results/results.csv"), show_col_types = FALSE) |> 
  mutate(
    # Rename the genes to their proper names, and convert to factor
    gene = case_when(
      gene == "bact" ~ "16S rRNA",
      gene == "cbblr" ~ "cbbLR",
      gene == "fungi" ~ "18S rRNA",
      gene == "phoa" ~ "phoA",
      gene == "urec" ~ "ureC"
    ) |> 
      factor(levels = c("16S rRNA", "cbbLR", "18S rRNA", "phoA", "ureC")),
    # Do the same for the methods
    method = case_when(
      method == "mi" ~ "MI",
      method == "coeffs" ~ "Coeffs",
      method == "cluster" ~ "Cluster",
      method == "pi" ~ "PI",
      method == "ga" ~ "GA",
      method == "consensus" ~ "Consensus (GA)",
      method == "baseline" ~ "Baseline"
    ) |> 
      factor(levels = c("MI", "Coeffs", "Cluster", "PI", "GA", "Consensus (GA)", "Baseline")),
    # Make the RMSE non-negated
    rmse = rmse * -1,
    region = case_when(
      region == "vis" ~ "Visible only",
      region == "all" ~ "All"
    ) |> 
      factor(levels = c("All", "Visible only"))
  ) |> 
  rename(
    Gene = gene,
    Method = method,
    Waveband = wv,
    RMSE = rmse,
    Region = region,
    R2 = r2,
    MAE = mae,
    Penalty = penalty,
    Ratio = ratio,
    Coefficient = coeff
  ) |> 
  relocate(Gene, Region, Method, Penalty, Ratio, Waveband, Coefficient, RMSE, R2, MAE)
```

```{r}
# The data here is calculated with respect to 
data <- read_csv(here("data/data_consol.csv"), show_col_types = FALSE) |> 
  pivot_longer(
    cols = matches("^[0-9]+$"), # Selects all column names which are only integers
    names_to = 'Waveband',
    values_to = 'Intensity'
  ) |> 
  mutate(Waveband = parse_integer(Waveband))
```

This is for visualizing what region on the spectrum each wavelength is
in:

```{r}
vis_light_colors <- binned_scale(
  aesthetics = 'color',
  #scale_name = 'stepsn',
  palette = function(x) c('black', 'purple', 'blue', 'cyan', 'green', 'yellow', 'orange', 'red', 'black'),
  breaks = c(380, 450, 485, 500, 565, 590, 625, 750),
  labels = NULL,
  limits = c(0, 2500),
  show.limits = TRUE,
  guide = 'none'
)
```

# Data distribution

This figure isn't good for the final paper, but it was okay for the
preliminary presentation.

```{r}
# data |> 
#   select(sample, Waveband, Intensity) |> 
#   group_by(sample) |> 
#   ggplot() +
#   geom_line(aes(x = Waveband, y = Intensity, color = Waveband), linewidth = 0.25) +
#   vis_light_colors +
#   labs(title = "Data distribution", subtitle = "398 samples overplotted; visible light regions colorized")

# ggsave(here("figures/data_dist.png"), device = "png", dpi = 300)
```

The Pearson correlation matrices are revealing, but they're probably not a good fit for the paper itself. They are commented out because the figures take a long time to run. Uncomment them out as needed.

```{r}
# corr_matrix <- read_csv(here("data/data_consol.csv"), show_col_types = FALSE) |> 
#   select(matches("^[0-9]+$")) |> 
#   cor() |> 
#   as_tibble() |> 
#   rowid_to_column(var = 'x') |> 
#   mutate(x = x + 349) |> 
#   pivot_longer(
#     cols = matches("^[0-9]+$"),
#     names_to = 'y',
#     values_to = 'corr'
#   ) |> 
#   mutate(
#     y = as.numeric(y),
#     above9 = corr > 0.9,
#     above95 = corr > 0.95,
#     above99 = corr > 0.99,
#     above999 = corr > 0.999
#   )
```

```{r}
# corr_matrix |> 
#   ggplot() +
#   geom_raster(aes(x = x, y = y, fill = corr)) +
#   scale_fill_distiller(palette = 'YlOrRd', direction = 1) +
#   labs(title = 'Pearson correlation matrix for hyperspectral wavebands') +
#   scale_x_continuous(breaks = c(350, seq(400, 2500, 100))) +
#   scale_y_continuous(breaks = c(350, seq(400, 2500, 100))) +
#   theme(axis.text.x = element_text(angle = 60, hjust = 1))
# 
# corr_matrix |> 
#   ggplot() +
#   geom_raster(aes(x = x, y = y, fill = above9)) +
#   scale_fill_brewer(palette = 'YlOrRd', direction = 1) +
#   labs(title = 'Pearson correlation matrix where corr > 0.9') +
#   scale_x_continuous(breaks = c(350, seq(400, 2500, 100))) +
#   scale_y_continuous(breaks = c(350, seq(400, 2500, 100)))+
#   theme(axis.text.x = element_text(angle = 60, hjust = 1))
# 
# corr_matrix |> 
#   ggplot() +
#   geom_raster(aes(x = x, y = y, fill = above95)) +
#   scale_fill_brewer(palette = 'YlOrRd', direction = 1) +
#   labs(title = 'Pearson correlation matrix where corr > 0.95') +
#   scale_x_continuous(breaks = c(350, seq(400, 2500, 100))) +
#   scale_y_continuous(breaks = c(350, seq(400, 2500, 100))) +
#   theme(axis.text.x = element_text(angle = 60, hjust = 1))
# 
# corr_matrix |> 
#   ggplot() +
#   geom_raster(aes(x = x, y = y, fill = above99)) +
#   scale_fill_brewer(palette = 'YlOrRd', direction = 1) +
#   labs(title = 'Pearson correlation matrix where corr > 0.99') +
#   scale_x_continuous(breaks = c(350, seq(400, 2500, 100))) +
#   scale_y_continuous(breaks = c(350, seq(400, 2500, 100))) +
#   theme(axis.text.x = element_text(angle = 60, hjust = 1))
# 
# corr_matrix |> 
#   ggplot() +
#   geom_raster(aes(x = x, y = y, fill = above999)) +
#   scale_fill_brewer(palette = 'YlOrRd', direction = 1) +
#   labs(title = 'Pearson correlation matrix where corr > 0.999') +
#   scale_x_continuous(breaks = c(350, seq(400, 2500, 100))) +
#   scale_y_continuous(breaks = c(350, seq(400, 2500, 100))) +
#   theme(axis.text.x = element_text(angle = 60, hjust = 1))
```

# Prelim figures

Keeping the code for these temporarily as a reference for quicker
reproduction

## RMSE results

```{r}
# results |> 
#   select(-Waveband) |> 
#   unique() |> 
#   ggplot() +
#   geom_point(aes(x = Method, y = RMSE, fill = Gene), color = "black", size = 3, shape = 21) +
#   geom_hline(yintercept = 1) +
#   scale_fill_colorblind() +
#   labs(title = "Method and gene vs. RMSE")

# ggsave(here("figures/method_gene_rmse.png"), device = "png", dpi = 300)
```

```{r}
# results |> 
#   select(-Waveband) |> 
#   unique() |> 
#   group_by(Method) |> 
#   summarize(mean_RMSE = mean(RMSE)) |> 
#   ggplot() +
#   geom_point(aes(x = Method, y = mean_RMSE), size = 3) +
#   geom_hline(yintercept = 1) +
#   labs(title = "Method vs. mean RMSE among all genes", y = "Mean RMSE")

# ggsave(here("figures/method_mean_rmse.png"), device = "png", dpi = 300)
```

```{r}
# results |> 
#   select(-Waveband) |> 
#   unique() |> 
#   ggplot() +
#   geom_point(aes(x = Method, y = RMSE, fill = Gene), color = "black", size = 3, shape = 21) +
#   geom_hline(yintercept = 1) +
#   scale_fill_colorblind() +
#   facet_wrap(~ Gene) +
#   theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
#   labs(title = "Method and gene vs. RMSE")

# ggsave(here("figures/method_gene_rmse_faceted.png"), device = "png", dpi = 300)
```

## Waveband selection results

```{r}
# results |> 
#   select(-RMSE) |> 
#   ggplot() +
#   geom_point(aes(x = Waveband, y = Method, color = Waveband)) +
#   facet_wrap(~ Gene) +
#   vis_light_colors +
#   labs(title = "Wavebands selected by each method, per gene")

# ggsave(here("figures/method_gene_waveband.png"), device = "png", dpi = 300)
```

```{r}
# results |> 
#   select(-RMSE) |> 
#   ggplot() +
#   geom_histogram(aes(x = Waveband), bins = 210) +
#   facet_wrap(~ Gene) +
#   labs(title = "Histogram of wavebands selected per gene")

# ggsave(here("figures/gene_waveband.png"), device = "png", dpi = 300)
```

# Analysis

These are based on the full results after running on SCINet. The main
differences with the above are the addition of region (visible light
only or all wavebands), R2, and MAE.

## Baseline (all genes)

```{r}
# Look at the baseline scores
results |> 
  filter(Method == "Baseline") |> 
  select(-Method, -Waveband, -Coefficient) |> 
  unique()

results |> 
  filter(Method == "Baseline") |> 
  select(-Method, -Waveband, -Coefficient) |> 
  filter(Gene == '16S rRNA') |> 
  unique()

results |> 
  filter(Method == "Baseline") |> 
  select(-Method, -Waveband, -Coefficient) |> 
  filter(Gene == '18S rRNA') |> 
  unique()
```

```{r}
results |> 
  filter(Method == "Baseline") |> 
  select(-Method, -Waveband, -Coefficient) |> 
  unique() |> 
  ggplot() +
  geom_point(aes(x = Gene, y = RMSE, shape = Region), color = 'red', size = 3) +
  geom_point(aes(x = Gene, y = MAE, shape = Region), color = 'blue', size = 3) +
  geom_point(aes(x = Gene, y = R2, shape = Region), color = 'violet', size = 3) +
  geom_hline(yintercept = 1) +
  geom_hline(yintercept = 0)

results |> 
  filter(Method == "Baseline") |> 
  select(-Method, -Waveband, -Coefficient) |> 
  unique() |> 
  ggplot() +
  geom_point(aes(x = Gene, y = RMSE, shape = Region)) +
  geom_hline(yintercept = 1)
```

Whoa, using visible light only actually *decreased* the error for 16S in
comparison with using the entire spectrum. This is a big result for the
paper, and it should be emphasized in the manuscript.

18S did very poorly, as the previous paper and this project's
preliminary tests suggested. It looks like the hyperspectral-18S pattern
just isn't there.

Looks like ureC also did better with vis only, just like 16S. Still
underwhelming results there, though. Also underwhelming for phoA and
cbbLR.

## 16S

```{r}
results |> 
  filter(Gene == '16S rRNA') |> 
  select(-Waveband, -Coefficient) |> 
  unique()
```

```{r}
results |> 
  filter(Gene == '16S rRNA') |> 
  select(-Waveband) |> 
  ggplot() +
  geom_point(aes(x = Method, y = RMSE, shape = Region)) +
  geom_hline(yintercept = 1)
```

Clustering was totally ineffective for 16S within the visible light
region only, and since PI was based on the clustering, it failed too.

It looks like GA had very similar results in both cases, which is really
interesting. Maybe they both converged to the same results? Look into
this.

For the other methods, the vis only results were pretty conclusively
better than the all results.

Also, the coeffs, GA, and consensus vis results were all similar to the
baseline, which also needs looking into.

Keep in mind for this whole paper: the consensus method chose far fewer
wavebands than the other methods were programmed to or tended to, so
naturally the consensus validation model error was a bit higher. The
most important thing for consensus is the relative importances assigned
via coeffs to the wavebands it chose.

### GA

```{r}
results |> 
  filter(Gene == '16S rRNA' & Method == 'GA') |> 
  select(-Waveband, -Coefficient) |> 
  unique()
```

Yeah, their metrics were very close. The minute differences might just
be due to the stochastic algorithm.

```{r}
results |> 
  filter(Gene == '16S rRNA' & Method == 'GA') |>
  select(Region, Waveband) |> 
  ggplot() +
  geom_point(aes(x = Waveband, y = Region, color = Waveband)) +
  vis_light_colors

results |> 
  filter(Gene == '16S rRNA' & Method == 'GA') |> 
  filter(Waveband >= 400 & Waveband <= 700) |> 
  select(Region, Waveband) |> 
  ggplot() +
  geom_point(aes(x = Waveband, y = Region, color = Waveband)) +
  vis_light_colors

results |> 
  filter(Gene == '16S rRNA' & Method == 'GA') |> 
  filter(Waveband >= 400 & Waveband <= 700) |> 
  select(Region, Waveband, Coefficient) |> 
  ggplot() +
  geom_point(aes(x = Waveband, y = Coefficient, color = Region)) +
  geom_hline(yintercept = 0) +
  scale_color_colorblind()
```

This is unexpected though. I thought (hoped) that the GA for all
wavebands would have converged to basically the same wavebands as
visible only, but that's not the case. I thought maybe the elastic net
validation model for vis assigned weights of about 0 to all the picks
that didn't line up, but it doesn't look like that's the case either. It
might have just been a coincidence, then, although that's a really
unsatisfying answer. If there's time later, come back and look into this
more.

### Waveband selection results

```{r}
results |> 
  filter(Gene == '16S rRNA') |>
  ggplot() +
  geom_histogram(aes(x = Waveband), binwidth = 10) +
  facet_wrap(~ Region, scales = 'free')

results |> 
  filter(Gene == '16S rRNA') |> 
  filter(Region == 'All') |> 
  filter(Waveband >= 400 & Waveband <= 700) |> 
  ggplot() +
  geom_histogram(aes(x = Waveband), binwidth = 10) +
  labs(title = '16S all, but restricted to same range as visible light only') +
  scale_x_continuous(breaks = seq(400, 700, 20))

results |> 
  filter(Gene == '16S rRNA') |> 
  filter(Region == 'Visible only') |> 
  ggplot() +
  geom_histogram(aes(x = Waveband), binwidth = 10) +
  labs(title = '16S vis') +
  scale_x_continuous(breaks = seq(400, 700, 20))
```

Not much agreement here overall. There's some in the ballpark of
580-600, and 670-690 for large peaks, and smaller peaks of agreement
around 410, 430-440, 500-510, 540, and 610-620.

But this was WRT all methods, focusing on vis-all differences. Are there
any patterns among the methods?

```{r}
results |> 
  filter(Gene == '16S rRNA') |> 
  filter(Region == 'Visible only') |> 
  filter(Method == 'Cluster' | Method == 'PI')

results |> 
  filter(Gene == '16S rRNA') |> 
  select(Region, Method, RMSE) |> 
  unique() |> 
  ggplot() +
  geom_point(aes(x = Method, y = RMSE, color = Region), size = 3) +
  scale_color_colorblind() +
  geom_hline(yintercept = 1)

results |> 
  filter(Gene == '16S rRNA') |> 
  filter(Region == 'Visible only') |> 
  filter(Method != 'Baseline' & Method != 'PI' & Method != 'Cluster') |> 
  ggplot() +
  geom_freqpoly(aes(x = Waveband, color = Method, after_stat(ncount)), binwidth = 10, linewidth = 2, alpha = 0.75) +
  scale_color_colorblind() +
  scale_x_continuous(breaks = seq(400, 700, 10))

results |> 
  filter(Gene == '16S rRNA') |> 
  filter(Region == 'Visible only') |> 
  filter(Method != 'Baseline' & Method != 'PI' & Method != 'Cluster') |> 
  ggplot() +
  geom_point(aes(x = Waveband, y = Method, color = Waveband), size = 3, alpha = 0.5) +
  vis_light_colors +
  scale_x_continuous(breaks = seq(400, 700, 10))

results |> 
  filter(Gene == '16S rRNA') |> 
  filter(Region == 'Visible only') |> 
  filter(Method == 'Consensus (GA)') |> 
  select(Waveband, Coefficient) |> 
  mutate(
    abs_coeff = abs(Coefficient),
    scaled_coeff = Coefficient / max(Coefficient),
    scaled_abs_coeff = abs_coeff / max(abs_coeff)) |> 
  arrange(abs_coeff |> desc()) |> 
  rowid_to_column(var = 'rank')

results |> 
  filter(Gene == '16S rRNA') |> 
  filter(Region == 'Visible only') |> 
  filter(Method == 'Consensus (GA)') |> 
  select(Waveband, Coefficient) |> 
  mutate(
    abs_coeff = abs(Coefficient),
    scaled_coeff = Coefficient / max(Coefficient),
    scaled_abs_coeff = abs_coeff / max(abs_coeff)) |> 
  arrange(abs_coeff |> desc()) |> 
  rowid_to_column(var = 'rank') |> 
  ggplot() +
  geom_point(aes(x = Waveband, y = 16-rank, color = Waveband), size = 3) +
  scale_x_continuous(breaks = seq(400, 700, 10)) +
  vis_light_colors

results |> 
  filter(Gene == '16S rRNA') |> 
  filter(Region == 'Visible only') |> 
  filter(Method == 'Consensus (GA)') |> 
  select(Waveband, Coefficient) |> 
  mutate(
    abs_coeff = abs(Coefficient),
    scaled_coeff = Coefficient / max(Coefficient),
    scaled_abs_coeff = abs_coeff / max(abs_coeff)) |> 
  arrange(abs_coeff |> desc()) |> 
  rowid_to_column(var = 'rank') |> 
  ggplot() +
  geom_point(aes(x = Waveband, y = scaled_coeff, color = Waveband), size = 3) +
  geom_hline(yintercept = 0) +
  scale_x_continuous(breaks = seq(400, 700, 10)) +
  vis_light_colors
```

Cluster and PI are overlapping pretty hard, but we already knew that
since PI is built on clustering results. Wait, it looks like the reason
they both did so terribly on vis only is they only chose two wavebands,
so of course it would do way worse. But that also indicates that after
omitting those two from consideration, visible only outperformed all
across the board.

For visible only, MI clearly preferred the red light. Unfortunately, it
wasn't among the best methods based on validation results.

Coeffs, GA, and consensus all thought around 440, exactly 509, around
535, and (exactly) 590 was important. The region from 665-670 was also
relatively important to all, but especially MI. Around 600 was important
particularly to MI, but also coeffs (not that much for GA or consensus).

As far as the consensus was concerned, the 3 most important wavebands
were all orange light. Green and yellow also did okay. Surprisingly, red
wasn't that important to that method.

```{r}
results |> 
  filter(Gene == '16S rRNA') |> 
  filter(Region == 'All') |> 
  filter(Method != 'Baseline' & Method != 'PI' & Method != 'Cluster') |> 
  ggplot() +
  geom_freqpoly(aes(x = Waveband, color = Method, after_stat(ncount)), binwidth = 10, linewidth = 2, alpha = 0.75) +
  scale_color_colorblind() +
  scale_x_continuous(breaks = seq(350, 2500, 50))

results |> 
  filter(Gene == '16S rRNA') |> 
  filter(Region == 'All') |> 
  filter(Method != 'Baseline' & Method != 'PI' & Method != 'Cluster') |> 
  ggplot() +
  geom_point(aes(x = Waveband, y = Method, color = Waveband), size = 3, alpha = 0.5) +
  vis_light_colors +
  scale_x_continuous(breaks = seq(350, 2500, 50))

results |> 
  filter(Gene == '16S rRNA') |> 
  filter(Region == 'All') |> 
  filter(Method == 'Consensus (GA)') |> 
  select(Waveband, Coefficient) |> 
  mutate(
    abs_coeff = abs(Coefficient),
    scaled_coeff = Coefficient / max(Coefficient),
    scaled_abs_coeff = abs_coeff / max(abs_coeff)) |> 
  arrange(abs_coeff |> desc()) |> 
  rowid_to_column(var = 'rank')

results |> 
  filter(Gene == '16S rRNA') |> 
  filter(Region == 'All') |> 
  filter(Method == 'Consensus (GA)') |> 
  select(Waveband, Coefficient) |> 
  mutate(
    abs_coeff = abs(Coefficient),
    scaled_coeff = Coefficient / max(Coefficient),
    scaled_abs_coeff = abs_coeff / max(abs_coeff)) |> 
  arrange(abs_coeff |> desc()) |> 
  rowid_to_column(var = 'rank') |> 
  ggplot() +
  geom_point(aes(x = Waveband, y = 16-rank, color = Waveband), size = 3) +
  scale_x_continuous(breaks = seq(350, 2500, 50)) +
  vis_light_colors

results |> 
  filter(Gene == '16S rRNA') |> 
  filter(Region == 'All') |> 
  filter(Method == 'Consensus (GA)') |> 
  select(Waveband, Coefficient) |> 
  mutate(
    abs_coeff = abs(Coefficient),
    scaled_coeff = Coefficient / max(Coefficient),
    scaled_abs_coeff = abs_coeff / max(abs_coeff)) |> 
  arrange(abs_coeff |> desc()) |> 
  rowid_to_column(var = 'rank') |> 
  ggplot() +
  geom_point(aes(x = Waveband, y = scaled_coeff, color = Waveband), size = 3) +
  geom_hline(yintercept = 0) +
  scale_x_continuous(breaks = seq(350, 2500, 50)) +
  vis_light_colors
```

When considering all, the red focus shifts to around 725 (all methods).
But there's a good amount of energy from MI, GA, and coeff around 1450,
and there's a very large spike from around 1875-1975 with all four
methods contributing some.

The consensus method had a strong preference for infrared wavebands,
especially around 1900-1950.

When comparing the magnitude of consensus validation model coefficients
between vis and all, vis had a much larger magnitude of its coeffs. I'm
not sure to what extent that matters here, though.

Update: I thought about it, and I think that's just a function of the
number of variables in each model. If both models (all and vis) are
trying to predict values in the ballpark of 10, for instance, vis has
way fewer wavebands, so they'll have overall higher magnitudes. And vice
versa for all. Even though y was scaled (Check this if putting this
point in paper or presentation!), the same argument applies.

### Baseline (16S)

```{r}
results |> 
  filter(Method == 'Baseline') |> 
  filter(Gene == '16S rRNA') |> 
  ggplot() +
  geom_point(aes(x = Waveband, y = Coefficient, color = Waveband)) +
  geom_hline(yintercept = 0) +
  vis_light_colors +
  facet_wrap(~ Region, scales = 'free') +
  labs(title = '16S baseline coefficients')

results |> 
  filter(Method == 'Baseline') |> 
  filter(Gene == '16S rRNA') |> 
  ggplot() +
  geom_line(aes(x = Waveband, y = Coefficient, color = Waveband)) +
  geom_hline(yintercept = 0) +
  vis_light_colors +
  facet_wrap(~ Region, scales = 'free') +
  labs(title = '16S baseline coefficients')
```

Looking at the baseline model coefficients for 16S, both all and vis
only, since these were among the best overall (and most important since
they're for 16S). 16S vis baseline is the most important overall.

One of the key patterns to look for is regions with high oscillation vs
pretty steady changes. For instance, look at the red light in vis only
for a steady rate of change, or the middle IR section in all. But one
interesting pattern going on is that the wavebands with the highest
coefficients are in high oscillation areas. I'll need to think on the
implications there. Especially in vis light for the purples, what does
it mean when one of the highest peaks is right next to the global min?

## 18S

```{r}
results |> 
  filter(Method == 'Baseline') |> 
  filter(Gene == '16S rRNA' | Gene == '18S rRNA') |> 
  ggplot() +
  geom_line(aes(x = Waveband, y = Coefficient, color = Waveband)) +
  geom_hline(yintercept = 0) +
  vis_light_colors +
  facet_wrap(Gene ~ Region, scales = 'free') +
  labs(title = '16S and 18S baseline coefficients')
```

Wait, I just wanted to compare some good baseline models to bad baseline
models. If 18S baseline looks like this, maybe that explains why it's so
bad? It looks like it chose L1 penalty over L2.

```{r}
results |> 
  filter(Method == 'Baseline') |> 
  filter(Gene == '18S rRNA' | Gene == '16S rRNA') |> 
  select(Region, Gene, Penalty, Ratio) |> 
  unique()

results |> 
  filter(Method == 'Baseline') |> 
  filter(Gene == '18S rRNA') |> 
  select(Region, Waveband, Coefficient) |> 
  mutate(
    zero_coeff = near(Coefficient, 0.0)
  ) |> 
  group_by(Region) |> 
  count(zero_coeff)
```

Yeah the vast majority of the baseline models for 18S had zero
coefficients. But they went through the exact same model training +
tuning process as the other ones, and this gave the best results for
cross validation, so it's still valid. It's always possible that 18S's
poor overall performance is just due to random chance with this
train/test split, but that's always the case for any ML thing like this.

```{r}
results |> 
  filter(Gene == 'cbbLR') |> 
  ggplot() +
  geom_hline(yintercept = 0) +
  geom_line(aes(x = Waveband, y = Coefficient, color = Waveband)) +
  facet_wrap(~Region + Method, scales = 'free') +
  vis_light_colors
```

```{r}
results |> 
  group_by(Gene, Region, Method) |> 
  count()
```

## Waveband selection results (consolidated)

Some of this is copied from the above.

### Validation metrics

These are for comparison, particularly when considering what the
consensus method for each gene ranked the best wavebands. If the
consensus validation metrics were WAY worse than the others, the
rankings should be taken with a grain of salt. All the consensus
validation metrics are somewhat worse, but this is somewhat expected:
removing features is going to reduce the amount of info in the dataset,
increasing prediction error. This is slightly alleviated by the high
correlation among wavebands in this data, but the variables aren't
completely redundant.

Also going with RMSE for the visualizations here, but that's somewhat
arbitrary. As shown below, RMSE and MAE are very highly correlated
(intuitively). Ignoring the negative correlation (which is obvious and
expected) between RMSE/MAE and R2, the correlation strength is not as
strong, but it's still expected due to the bias/variance tradeoff.

```{r}
results_no_wv <- results |> 
  select(-Waveband, -Coefficient) |> 
  unique()

cor(results_no_wv$RMSE, results_no_wv$R2)
cor(results_no_wv$RMSE, results_no_wv$MAE)
cor(results_no_wv$R2, results_no_wv$MAE)
```

```{r}
results_no_wv |> 
  ggplot() +
  geom_point(aes(x = Method, y = RMSE, shape = Region)) +
  geom_hline(yintercept = 1) +
  facet_wrap(~ Gene, scales = 'free') +
  theme(axis.text.x = element_text(angle = 45, hjust = 1))

results_no_wv |> 
  ggplot() +
  geom_point(aes(x = Method, y = R2, shape = Region)) +
  geom_hline(yintercept = 0) +
  facet_wrap(~ Gene, scales = 'free') +
  theme(axis.text.x = element_text(angle = 45, hjust = 1))
```

Comparing RMSE to MAE. If one gene's models have a much higher difference in RMSE vs. MAE, that might imply outliers for that specific set of gene levels.

```{r}
results |> 
  select(-Waveband, -Coefficient) |> 
  unique() |> 
  mutate(
    diff = RMSE - MAE
  ) |> 
  ggplot() +
  geom_point(aes(x = Method, y = diff, shape = Region)) +
  facet_wrap(~ Gene) +
  theme(axis.text.x = element_text(angle = 60, hjust = 1))
```

No, they look fairly consistent among genes. Most of the variation has to do with exceptionally poor models like 16S's cluster and PI on vis only.

### Consensus choices

#### Visible

```{r}
results |> 
  filter(Region == 'Visible only') |> 
  filter(Method == 'Consensus (GA)') |> 
  ggplot() +
  geom_histogram(aes(x = Waveband), binwidth = 10) +
  facet_wrap(~ Gene) +
  labs(
    title = 'Wavebands selected for each gene',
    subtitle = 'Vis only, consensus'
  ) +
  scale_x_continuous(breaks = seq(400, 700, 20)) +
  theme(axis.text.x = element_text(angle = 60, hjust = 1))

results |> 
  filter(Region == 'Visible only') |> 
  filter(Method == 'Consensus (GA)') |> 
  ggplot() +
  geom_histogram(aes(x = Waveband), binwidth = 10) +
  #facet_wrap(~ Gene) +
  labs(
    title = 'Wavebands selected for all genes',
    subtitle = 'Vis only, consensus'
  ) +
  scale_x_continuous(breaks = seq(400, 700, 20)) +
  theme(axis.text.x = element_text(angle = 60, hjust = 1))

results |> 
  filter(Region == 'Visible only') |> 
  filter(Method == 'Consensus (GA)') |> 
  ggplot() +
  geom_freqpoly(aes(x = Waveband, color = Gene), binwidth = 10) +
  labs(
    title = 'Wavebands selected for each gene',
    subtitle = 'Vis only, consensus'
  ) +
  scale_x_continuous(breaks = seq(400, 700, 20)) +
  theme(axis.text.x = element_text(angle = 60, hjust = 1)) +
  scale_color_colorblind()
```

Maybe when reporting, discuss clusters, rounded to the nearest 10s
place? Approx values below (go back later and correct with exact
wavebands chosen):

For 16S: 510, 540, **590**, 620 Overall: **620**, **640**, 510, 540,
580, 670, 700 (but especially in the 540-640 range)

#### All

```{r}
results |> 
  filter(Region == 'All') |> 
  filter(Method == 'Consensus (GA)') |> 
  ggplot() +
  geom_histogram(aes(x = Waveband), binwidth = 10) +
  facet_wrap(~ Gene) +
  labs(
    title = 'Wavebands selected for each gene',
    subtitle = 'All wv, consensus'
  ) +
  scale_x_continuous(breaks = seq(350, 2500, 100)) +
  theme(axis.text.x = element_text(angle = 60, hjust = 1))

results |> 
  filter(Gene == '16S rRNA') |> 
  filter(Region == 'All') |> 
  filter(Method == 'Consensus (GA)') |> 
  ggplot() +
  geom_histogram(aes(x = Waveband), binwidth = 10) +
  #facet_wrap(~ Gene) +
  labs(
    title = 'Wavebands selected for 16S only',
    subtitle = 'All wv, consensus'
  ) +
  scale_x_continuous(breaks = seq(350, 2500, 100)) +
  theme(axis.text.x = element_text(angle = 60, hjust = 1))

results |> 
  filter(Region == 'All') |> 
  filter(Method == 'Consensus (GA)') |> 
  ggplot() +
  geom_histogram(aes(x = Waveband), binwidth = 10) +
  #facet_wrap(~ Gene) +
  labs(
    title = 'Wavebands selected for each gene',
    subtitle = 'All wv, consensus'
  ) +
  scale_x_continuous(breaks = seq(350, 2500, 100)) +
  theme(axis.text.x = element_text(angle = 60, hjust = 1))

results |> 
  filter(Region == 'All') |> 
  filter(Method == 'Consensus (GA)') |> 
  ggplot() +
  geom_freqpoly(aes(x = Waveband, color = Gene), binwidth = 10) +
  labs(
    title = 'Wavebands selected for each gene',
    subtitle = 'All wv, consensus'
  ) +
  scale_x_continuous(breaks = seq(350, 2500, 100)) +
  theme(axis.text.x = element_text(angle = 60, hjust = 1)) +
  scale_color_colorblind()

results |> 
  filter(Region == 'All') |> 
  filter(Method == 'Consensus (GA)') |> 
  filter(Waveband < 1250) |> 
  ggplot() +
  #geom_freqpoly(aes(x = Waveband, color = Gene), binwidth = 10) +
  geom_histogram(aes(x = Waveband), binwidth = 10) +
  labs(
    title = 'Wavebands selected for each gene',
    subtitle = 'All wv, consensus (part 1)'
  ) +
  scale_x_continuous(breaks = seq(350, 1250, 10)) +
  theme(axis.text.x = element_text(angle = 60, hjust = 1)) +
  scale_color_colorblind()

results |> 
  filter(Region == 'All') |> 
  filter(Method == 'Consensus (GA)') |> 
  filter(Waveband >= 1250 & Waveband < 1850) |> 
  ggplot() +
  #geom_freqpoly(aes(x = Waveband, color = Gene), binwidth = 10) +
  geom_histogram(aes(x = Waveband), binwidth = 10) +
  labs(
    title = 'Wavebands selected for each gene',
    subtitle = 'All wv, consensus (part 2)'
  ) +
  scale_x_continuous(breaks = seq(1250, 1850, 10)) +
  theme(axis.text.x = element_text(angle = 60, hjust = 1)) +
  scale_color_colorblind()

results |> 
  filter(Region == 'All') |> 
  filter(Method == 'Consensus (GA)') |> 
  filter(Waveband >= 1850) |> 
  ggplot() +
  #geom_freqpoly(aes(x = Waveband, color = Gene), binwidth = 10) +
  geom_histogram(aes(x = Waveband), binwidth = 10) +
  labs(
    title = 'Wavebands selected for each gene',
    subtitle = 'All wv, consensus (part 3)'
  ) +
  scale_x_continuous(breaks = seq(1850, 2500, 10)) +
  theme(axis.text.x = element_text(angle = 60, hjust = 1)) +
  scale_color_colorblind()
```

For 16S: most important from 1900-1950, but others relatively spread out
Overall: **350**, **475-550**

### Baseline coeffs

The somewhat arbitrary threshold of the top 17 features is because ureC
has only 17 nonzero coefficients.

```{r}
results |> 
  filter(Region == 'Visible only') |> 
  filter(Method == 'Baseline') |> 
  mutate(abs_coeff = abs(Coefficient)) |> 
  group_by(Gene) |>
  slice_max(n = 17, order_by = abs_coeff, na_rm = TRUE) |> 
  ggplot() +
  geom_histogram(aes(x = Waveband), binwidth = 10) +
  facet_wrap(~ Gene) +
  labs(
    title = 'Baseline highest abs coeffs',
    subtitle = 'Vis only'
  ) +
  scale_x_continuous(breaks = seq(400, 700, 20)) +
  theme(axis.text.x = element_text(angle = 60, hjust = 1))

results |> 
  filter(Region == 'Visible only') |> 
  filter(Method == 'Baseline') |> 
  mutate(abs_coeff = abs(Coefficient)) |> 
  group_by(Gene) |>
  slice_max(n = 17, order_by = abs_coeff, na_rm = TRUE) |> 
  ggplot() +
  geom_histogram(aes(x = Waveband), binwidth = 10) +
  #facet_wrap(~ Gene) +
  labs(
    title = 'Baseline highest abs coeffs',
    subtitle = 'Vis only'
  ) +
  scale_x_continuous(breaks = seq(400, 700, 20)) +
  theme(axis.text.x = element_text(angle = 60, hjust = 1))
```

```{r}
results |> 
  filter(Region == 'All') |> 
  filter(Method == 'Baseline') |> 
  mutate(abs_coeff = abs(Coefficient)) |> 
  group_by(Gene) |>
  slice_max(n = 17, order_by = abs_coeff, na_rm = TRUE) |> 
  ggplot() +
  geom_histogram(aes(x = Waveband), binwidth = 10) +
  facet_wrap(~ Gene) +
  labs(
    title = 'Wavebands selected for each gene',
    subtitle = 'All wv, overall'
  ) +
  scale_x_continuous(breaks = seq(350, 2500, 100)) +
  theme(axis.text.x = element_text(angle = 60, hjust = 1))

results |> 
  filter(Region == 'All') |> 
  filter(Method == 'Baseline') |> 
  mutate(abs_coeff = abs(Coefficient)) |> 
  group_by(Gene) |>
  slice_max(n = 17, order_by = abs_coeff, na_rm = TRUE) |>  
  ggplot() +
  geom_histogram(aes(x = Waveband), binwidth = 10) +
  #facet_wrap(~ Gene) +
  labs(
    title = 'Wavebands selected for each gene',
    subtitle = 'All wv, overall'
  ) +
  scale_x_continuous(breaks = seq(350, 2500, 100)) +
  theme(axis.text.x = element_text(angle = 60, hjust = 1))

results |> 
  filter(Region == 'All') |> 
  filter(Method == 'Baseline') |> 
  mutate(abs_coeff = abs(Coefficient)) |> 
  group_by(Gene) |>
  slice_max(n = 17, order_by = abs_coeff, na_rm = TRUE) |>  
  ggplot() +
  geom_freqpoly(aes(x = Waveband, color = Gene), binwidth = 10) +
  labs(
    title = 'Wavebands selected for each gene',
    subtitle = 'All wv, overall'
  ) +
  scale_x_continuous(breaks = seq(350, 2500, 100)) +
  theme(axis.text.x = element_text(angle = 60, hjust = 1)) +
  scale_color_colorblind()
```

# Final figures

```{r}
# results |> 
#   select(Gene, Region, Method, RMSE, R2, MAE) |> 
#   unique() |> 
#   ggplot() +
#   geom_point(aes(x = RMSE, y = R2, shape = Gene, color = Method), size = 3) +
#   geom_vline(xintercept = 1) +
#   geom_hline(yintercept = 0) +
#   #scale_color_colorblind() +
#   facet_wrap(~ Region)
```

This is TMI. There don't appear to be any big surprises in terms of the
relationship among RMSE and R2, so it's probably best to just plot one
error metric (RMSE probably) and make note of the others if necessary.

```{r}
# results |> 
#   select(Gene, Region, Method, RMSE) |> 
#   unique() |> 
#   ggplot() +
#   geom_point(aes(x = Gene, y = RMSE, fill = Method), shape = 21, color = 'black', size = 3) +
#   scale_fill_colorblind() +
#   #scale_fill_brewer(palette = 'Dark2') +
#   facet_wrap(~ Region) +
#   geom_hline(yintercept = 1) +
#   theme(axis.text.x = element_text(angle = 60, hjust = 1))

results |> 
  select(Gene, Region, Method, RMSE) |> 
  unique() |> 
  ggplot() +
  geom_point(aes(x = Method, y = RMSE, fill = Gene), shape = 21, color = 'black', size = 3) +
  scale_fill_colorblind() +
  #scale_fill_brewer(palette = 'Dark2') +
  facet_wrap(~ Region) +
  geom_hline(yintercept = 1) +
  theme(axis.text.x = element_text(angle = 60, hjust = 1))

# ggsave(here("figures/method_gene_rmse.png"), device = "png", dpi = 300)
# ggsave(here("figures/method_gene_rmse.tiff"), device = "tiff", dpi = 300)
```

I like this last figure. There is some occlusion, but overall it works
for communicating what method did better for what gene/region. Playing
with alpha to address the occlusion just made the plot look worse. Just
make sure to adjust the geom_point size as needed for the figure size.

Models of note: 16S baseline vis (lowest RMSE overall), 16S consensus
vis (insight into important features)

16S baseline vis coefficients:

```{r}
results |> 
  filter(Gene == '16S rRNA') |> 
  filter(Method == 'Baseline') |> 
  filter(Region == 'Visible only') |> 
  ggplot() +
  geom_point(aes(x = Waveband, y = Coefficient)) +
  geom_hline(yintercept = 0) +
  scale_x_continuous(breaks = seq(400, 700, 20)) +
  theme(axis.text.x = element_text(angle = 60, hjust = 1)) +
  labs(x = 'Waveband (nm)')

# ggsave(here("figures/bact_baseline_vis_coeffs_bw.png"), device = "png", dpi = 300)
# ggsave(here("figures/bact_baseline_vis_coeffs_bw.tiff"), device = "tiff", dpi = 300)

results |> 
  filter(Gene == '16S rRNA') |> 
  filter(Method == 'Baseline') |> 
  filter(Region == 'Visible only') |> 
  ggplot() +
  geom_point(aes(x = Waveband, y = Coefficient, color = Waveband)) +
  geom_hline(yintercept = 0) +
  scale_x_continuous(breaks = seq(400, 700, 20)) +
  theme(axis.text.x = element_text(angle = 60, hjust = 1)) +
  vis_light_colors +
  labs(x = 'Waveband (nm)')

# ggsave(here("figures/bact_baseline_vis_coeffs_color.png"), device = "png", dpi = 300)
# ggsave(here("figures/bact_baseline_vis_coeffs_color.tiff"), device = "tiff", dpi = 300)
```

Not sure which of these is the best. It's the same information
throughout though. Decided for points because the line looks bad and is
misleading on the consensus coeffs below.

I think black/white better for paper, but color might be good in a
presentation.

```{r}
results |> 
  filter(Gene == '16S rRNA') |> 
  filter(Method == 'Consensus (GA)') |> 
  filter(Region == 'Visible only') |> 
  ggplot() +
  geom_point(aes(x = Waveband, y = Coefficient)) +
  geom_hline(yintercept = 0) +
  scale_x_continuous(breaks = seq(400, 700, 20)) +
  theme(axis.text.x = element_text(angle = 60, hjust = 1)) +
  labs(x = 'Waveband (nm)')

# ggsave(here("figures/bact_consensus_vis_coeffs_bw.png"), device = "png", dpi = 300)
# ggsave(here("figures/bact_consensus_vis_coeffs_bw.tiff"), device = "tiff", dpi = 300)

results |> 
  filter(Gene == '16S rRNA') |> 
  filter(Method == 'Consensus (GA)') |> 
  filter(Region == 'Visible only') |> 
  ggplot() +
  geom_point(aes(x = Waveband, y = Coefficient, color = Waveband)) +
  geom_hline(yintercept = 0) +
  scale_x_continuous(breaks = seq(400, 700, 20)) +
  theme(axis.text.x = element_text(angle = 60, hjust = 1)) +
  vis_light_colors +
  labs(x = 'Waveband (nm)')

# ggsave(here("figures/bact_consensus_vis_coeffs_color.png"), device = "png", dpi = 300)
# ggsave(here("figures/bact_consensus_vis_coeffs_color.tiff"), device = "tiff", dpi = 300)
```

```{r}
results |> 
  filter(Method == 'Consensus (GA)') |> 
  filter(!near(Coefficient, 0)) |>
  ggplot() +
  geom_histogram(aes(x = Waveband), binwidth = 10) +
  facet_grid(rows = vars(Gene), cols = vars(Region), scales = 'free_x') +
  labs(x = 'Waveband (nm)', y = 'Count')

# ggsave(here("figures/consensus_histogram_gene.png"), device = "png", dpi = 300)
# ggsave(here("figures/consensus_histogram_gene.tiff"), device = "tiff", dpi = 300)

# results |> 
#   filter(Method == 'Consensus (GA)') |> 
#   ggplot() +
#   geom_point(aes(x = Waveband, y = Gene)) +
#   facet_wrap(~ Region, scales = 'free_x')

# results |> 
#   filter(Method == 'Consensus (GA)') |> 
#   filter(Region == 'Visible only') |> 
#   ggplot() +
#   geom_histogram(aes(x = Waveband), binwidth = 10) +
#   scale_x_continuous(breaks = seq(400, 700, 20)) +
#   theme(axis.text.x = element_text(angle = 60, hjust = 1)) +
#   facet_wrap(~ Gene)

# results |> 
#   filter(Method == 'Consensus (GA)') |> 
#   filter(Region == 'All') |> 
#   ggplot() +
#   geom_histogram(aes(x = Waveband), binwidth = 10) +
#   scale_x_continuous(breaks = seq(350, 2500, 200)) +
#   theme(axis.text.x = element_text(angle = 60, hjust = 1)) +
#   facet_wrap(~ Gene)
```

I prefer the histogram version of this. Main idea: what wavebands tended
to be ranked important for each gene by the consensus method. But what
about consolidating results among genes?

```{r}
results |>
  filter(Method == 'Consensus (GA)') |>
  filter(!near(Coefficient, 0)) |>
  ggplot() +
  geom_histogram(aes(x = Waveband), binwidth = 10) +
  facet_wrap(~ Region, scales = 'free_x') +
  labs(x = 'Waveband (nm)', y = 'Count')

# ggsave(here("figures/consensus_histogram.png"), device = "png", dpi = 300)
# ggsave(here("figures/consensus_histogram.tiff"), device = "tiff", dpi = 300)

# results |> 
#   filter(Method == 'Consensus (GA)') |> 
#   filter(Region == 'Visible only') |> 
#   ggplot() +
#   geom_histogram(aes(x = Waveband), binwidth = 10) +
#   scale_x_continuous(breaks = seq(400, 700, 20)) +
#   theme(axis.text.x = element_text(angle = 60, hjust = 1))

# results |> 
#   filter(Method == 'Consensus (GA)') |> 
#   filter(Region == 'All') |> 
#   ggplot() +
#   geom_histogram(aes(x = Waveband), binwidth = 10) +
#   scale_x_continuous(breaks = c(350, seq(400, 2500, 100))) +
#   theme(axis.text.x = element_text(angle = 60, hjust = 1))
```

I like the faceted single plots, but they don't allow for as detailed
labels on the x axis for the "all" regions. Keeping them for now; will
go with the others later if needed.

This shows more of the important patterns, although there's still not a
blindingly clear pattern.

I'm very hesitant to recommend specific wavebands down to the
nanometer-level precision. At that level, any variation might be more
due to noise or stochastic algorithm choices than an actual signal in
the data. For instance, 500 is probably essentially identical to 501, so
even if both happen to be recommended, practically speaking, it should
only count as one waveband. Also, depending on how the bins are
calculated behind the scenes for the histogram, they might be in
different bins.

# Tabular analysis of waveband selections

Going in afterwards and looking at the more precise wavebands for the
sake of the writeup. The bins here might not match up with the
histograms in terms of offsets, but they're good enough to know where to
zoom in later. This is mostly for the sake of getting more precision on the "All" plots, since they can't have many axis labels.

```{r}
results |>
  filter(Region == 'Visible only') |> 
  filter(Method == 'Consensus (GA)') |> 
  filter(!near(Coefficient, 0)) |>
  ggplot() +
  geom_histogram(aes(x = Waveband), binwidth = 10) +
  #facet_wrap(~ Region, scales = 'free_x')
  scale_x_continuous(breaks = seq(400, 700, 10))

results |>
  filter(Region == 'All') |> 
  filter(Method == 'Consensus (GA)') |> 
  filter(!near(Coefficient, 0)) |>
  ggplot() +
  geom_histogram(aes(x = Waveband), binwidth = 10) +
  #facet_wrap(~ Region, scales = 'free_x') +
  labs(x = 'Waveband (nm)', y = 'Count') +
  scale_x_continuous(breaks = seq(400, 2500, 100))

# results |>
#   select(Gene, Region, Method, Waveband, Coefficient) |> 
#   filter(Method == 'Consensus (GA)') |> 
#   filter(!near(Coefficient, 0)) |>
#   mutate(
#     bin = round(Waveband, digits = -1)
#   ) |> 
#   count(bin)

results |>
  select(Gene, Region, Method, Waveband, Coefficient) |> 
  filter(Method == 'Consensus (GA)') |>
  filter(!near(Coefficient, 0)) |>
  mutate(
    bin = round(Waveband, digits = -1)
  ) |>
  filter(bin < 400) |> 
  arrange(Waveband)

results |>
  select(Gene, Region, Method, Waveband, Coefficient) |> 
  filter(Method == 'Consensus (GA)') |>
  filter(!near(Coefficient, 0)) |>
  mutate(
    bin = round(Waveband, digits = -1)
  ) |>
  filter(bin > 900 & bin < 1100) |> 
  arrange(Waveband)

results |>
  select(Gene, Region, Method, Waveband, Coefficient) |> 
  filter(Method == 'Consensus (GA)') |> 
  filter(!near(Coefficient, 0)) |>
  mutate(
    bin = round(Waveband, digits = -1)
  ) |>
  filter(bin > 1400 & bin < 1660) |> 
  arrange(Waveband)

results |>
  select(Gene, Region, Method, Waveband, Coefficient) |> 
  filter(Method == 'Consensus (GA)') |> 
  filter(!near(Coefficient, 0)) |> 
  mutate(
    bin = round(Waveband, digits = -1)
  ) |>
  filter(bin > 1850 & bin < 1950) |> 
  arrange(Waveband)

results |>
  select(Gene, Region, Method, Waveband, Coefficient) |> 
  filter(Method == 'Consensus (GA)') |> 
  filter(!near(Coefficient, 0)) |> 
  mutate(
    bin = round(Waveband, digits = -1)
  ) |>
  filter(bin > 1950 & bin < 2150) |> 
  arrange(Waveband)

results |>
  select(Gene, Region, Method, Waveband, Coefficient) |> 
  filter(Method == 'Consensus (GA)') |> 
  filter(!near(Coefficient, 0)) |> 
  mutate(
    bin = round(Waveband, digits = -1)
  ) |>
  filter(bin > 2150 & bin < 2400) |> 
  arrange(Waveband)

results |>
  select(Gene, Region, Method, Waveband, Coefficient) |> 
  filter(Method == 'Consensus (GA)') |> 
  filter(Region == 'All') |> 
  filter(!near(Coefficient, 0)) |> 
  mutate(
    bin = round(Waveband, digits = -1)
  ) |>
  filter(bin > 400 & bin < 760) |> 
  arrange(Waveband)
```

Methodology for analysis here:

-   Ignore wavebands with coeffs near 0; their validation model found
    them unimportant even though the consensus GA selected them.

-   Ignore wavebands not near any other selections.

-   Ignore results around 350 and 2500 due to questionable data quality
    around the endpoints.

-   Take the floor of each waveband selected for analysis (i.e., replace
    the ones digit with 0).

-   Prioritize 16S results, clusters of bins among genes, and runs of
    bins with the same gene.

All, outside of visible light:

-   970-980 (phoA, ureC, 16S)

-   1440 (phoA)

-   1530-1550 (cbbLR, ureC)

-   **1890-1940 (16S)**

-   2050-2060 (cbbLR, phoA)

All, inside visible light (a little over):

-   430 (cbbLR)

-   510-560 (cbbLR, 16S, phoA, 18S, ureC)

-   700-720 (phoA, 16S)
























